<?xml version="1.0" encoding="UTF-8"?><testrun duration="607" footerText="Generated by IntelliJ IDEA on 2/22/21, 10:14 AM" name="CritterFunctionalTest">
    <count name="total" value="9"/>
    <count name="passed" value="9"/>
    <config nameIsGenerated="true" configId="JUnit" name="CritterFunctionalTest">
        <module name="critter"/>
        <extension name="coverage">
            <pattern>
                <option name="PATTERN" value="com.udacity.jdnd.course3.critter.*"/>
                <option name="ENABLED" value="true"/>
            </pattern>
        </extension>
        <option name="PACKAGE_NAME" value="com.udacity.jdnd.course3.critter"/>
        <option name="MAIN_CLASS_NAME" value="com.udacity.jdnd.course3.critter.CritterFunctionalTest"/>
        <option name="TEST_OBJECT" value="class"/>
    </config>
    <suite duration="607" locationUrl="java:suite://com.udacity.jdnd.course3.critter.CritterFunctionalTest" name="CritterFunctionalTest" status="passed">
        <test duration="206" locationUrl="java:test://com.udacity.jdnd.course3.critter.CritterFunctionalTest/testFindOwnerByPet" name="testFindOwnerByPet()" metainfo="" status="passed">
            <output type="stdout">2021-02-22 10:06:48.218  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@29ebaf2f, testMethod = testFindOwnerByPet@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1a1f22f2]; rollback [true]
Hibernate: 
    select
        customer0_.id as id1_0_0_,
        customer0_.name as name2_0_0_,
        customer0_.notes as notes3_0_0_,
        customer0_.phoneNumber as phoneNum4_0_0_ 
    from
        Customer customer0_ 
    where
        customer0_.id=?
Hibernate: 
    insert 
    into
        Customer
        (name, notes, phoneNumber) 
    values
        (?, ?, ?)
Hibernate: 
    select
        pet0_.id as id1_4_0_,
        pet0_.birthDate as birthDat2_4_0_,
        pet0_.customer_id as customer6_4_0_,
        pet0_.name as name3_4_0_,
        pet0_.notes as notes4_4_0_,
        pet0_.type as type5_4_0_ 
    from
        Pet pet0_ 
    where
        pet0_.id=?
Hibernate: 
    insert 
    into
        Pet
        (birthDate, customer_id, name, notes, type) 
    values
        (?, ?, ?, ?, ?)
2021-02-22 10:06:48.411  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@29ebaf2f, testMethod = testFindOwnerByPet@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]
</output>
        </test>
        <test duration="192" locationUrl="java:test://com.udacity.jdnd.course3.critter.CritterFunctionalTest/testFindEmployeesByServiceAndTime" name="testFindEmployeesByServiceAndTime()" metainfo="" status="passed">
            <output type="stdout">2021-02-22 10:06:48.417  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@549be307, testMethod = testFindEmployeesByServiceAndTime@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1a1f22f2]; rollback [true]
Hibernate: 
    select
        employee0_.id as id1_1_0_,
        employee0_.name as name2_1_0_ 
    from
        Employee employee0_ 
    where
        employee0_.id=?
Hibernate: 
    insert 
    into
        Employee
        (name) 
    values
        (?)
Hibernate: 
    select
        employee0_.id as id1_1_0_,
        employee0_.name as name2_1_0_ 
    from
        Employee employee0_ 
    where
        employee0_.id=?
Hibernate: 
    insert 
    into
        Employee
        (name) 
    values
        (?)
Hibernate: 
    select
        employee0_.id as id1_1_0_,
        employee0_.name as name2_1_0_ 
    from
        Employee employee0_ 
    where
        employee0_.id=?
Hibernate: 
    insert 
    into
        Employee
        (name) 
    values
        (?)
Hibernate: 
    insert 
    into
        Employee_daysAvailable
        (Employee_id, daysAvailable) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_daysAvailable
        (Employee_id, daysAvailable) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_daysAvailable
        (Employee_id, daysAvailable) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_skills
        (Employee_id, skills) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_skills
        (Employee_id, skills) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_daysAvailable
        (Employee_id, daysAvailable) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_daysAvailable
        (Employee_id, daysAvailable) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_daysAvailable
        (Employee_id, daysAvailable) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_skills
        (Employee_id, skills) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_skills
        (Employee_id, skills) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_daysAvailable
        (Employee_id, daysAvailable) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_daysAvailable
        (Employee_id, daysAvailable) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_daysAvailable
        (Employee_id, daysAvailable) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_skills
        (Employee_id, skills) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_skills
        (Employee_id, skills) 
    values
        (?, ?)
Hibernate: 
    select
        employee0_.id as id1_1_,
        employee0_.name as name2_1_ 
    from
        Employee employee0_ 
    left outer join
        Employee_daysAvailable daysavaila1_ 
            on employee0_.id=daysavaila1_.Employee_id 
    where
        daysavaila1_.daysAvailable=?
Hibernate: 
    select
        employee0_.id as id1_1_,
        employee0_.name as name2_1_ 
    from
        Employee employee0_ 
    left outer join
        Employee_daysAvailable daysavaila1_ 
            on employee0_.id=daysavaila1_.Employee_id 
    where
        daysavaila1_.daysAvailable=?
2021-02-22 10:06:48.607  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@549be307, testMethod = testFindEmployeesByServiceAndTime@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]
</output>
        </test>
        <test duration="24" locationUrl="java:test://com.udacity.jdnd.course3.critter.CritterFunctionalTest/testAddPetsToCustomer" name="testAddPetsToCustomer()" metainfo="" status="passed">
            <output type="stdout">2021-02-22 10:06:48.609  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@7dd92a36, testMethod = testAddPetsToCustomer@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1a1f22f2]; rollback [true]
Hibernate: 
    select
        customer0_.id as id1_0_0_,
        customer0_.name as name2_0_0_,
        customer0_.notes as notes3_0_0_,
        customer0_.phoneNumber as phoneNum4_0_0_ 
    from
        Customer customer0_ 
    where
        customer0_.id=?
Hibernate: 
    insert 
    into
        Customer
        (name, notes, phoneNumber) 
    values
        (?, ?, ?)
Hibernate: 
    select
        pet0_.id as id1_4_0_,
        pet0_.birthDate as birthDat2_4_0_,
        pet0_.customer_id as customer6_4_0_,
        pet0_.name as name3_4_0_,
        pet0_.notes as notes4_4_0_,
        pet0_.type as type5_4_0_ 
    from
        Pet pet0_ 
    where
        pet0_.id=?
Hibernate: 
    insert 
    into
        Pet
        (birthDate, customer_id, name, notes, type) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    select
        pet0_.id as id1_4_,
        pet0_.birthDate as birthDat2_4_,
        pet0_.customer_id as customer6_4_,
        pet0_.name as name3_4_,
        pet0_.notes as notes4_4_,
        pet0_.type as type5_4_ 
    from
        Pet pet0_ 
    where
        pet0_.customer_id=?
Hibernate: 
    select
        customer0_.id as id1_0_,
        customer0_.name as name2_0_,
        customer0_.notes as notes3_0_,
        customer0_.phoneNumber as phoneNum4_0_ 
    from
        Customer customer0_
2021-02-22 10:06:48.632  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@7dd92a36, testMethod = testAddPetsToCustomer@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]
</output>
        </test>
        <test duration="11" locationUrl="java:test://com.udacity.jdnd.course3.critter.CritterFunctionalTest/testCreateCustomer" name="testCreateCustomer()" metainfo="" status="passed">
            <output type="stdout">2021-02-22 10:06:48.636  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@38568876, testMethod = testCreateCustomer@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1a1f22f2]; rollback [true]
Hibernate: 
    select
        customer0_.id as id1_0_0_,
        customer0_.name as name2_0_0_,
        customer0_.notes as notes3_0_0_,
        customer0_.phoneNumber as phoneNum4_0_0_ 
    from
        Customer customer0_ 
    where
        customer0_.id=?
Hibernate: 
    insert 
    into
        Customer
        (name, notes, phoneNumber) 
    values
        (?, ?, ?)
Hibernate: 
    select
        customer0_.id as id1_0_,
        customer0_.name as name2_0_,
        customer0_.notes as notes3_0_,
        customer0_.phoneNumber as phoneNum4_0_ 
    from
        Customer customer0_
2021-02-22 10:06:48.644  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@38568876, testMethod = testCreateCustomer@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]
</output>
        </test>
        <test duration="46" locationUrl="java:test://com.udacity.jdnd.course3.critter.CritterFunctionalTest/testSchedulePetsForServiceWithEmployee" name="testSchedulePetsForServiceWithEmployee()" metainfo="" status="passed">
            <output type="stdout">2021-02-22 10:06:48.648  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@3e356ed6, testMethod = testSchedulePetsForServiceWithEmployee@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1a1f22f2]; rollback [true]
Hibernate: 
    select
        employee0_.id as id1_1_0_,
        employee0_.name as name2_1_0_ 
    from
        Employee employee0_ 
    where
        employee0_.id=?
Hibernate: 
    insert 
    into
        Employee
        (name) 
    values
        (?)
Hibernate: 
    select
        customer0_.id as id1_0_0_,
        customer0_.name as name2_0_0_,
        customer0_.notes as notes3_0_0_,
        customer0_.phoneNumber as phoneNum4_0_0_ 
    from
        Customer customer0_ 
    where
        customer0_.id=?
Hibernate: 
    insert 
    into
        Customer
        (name, notes, phoneNumber) 
    values
        (?, ?, ?)
Hibernate: 
    select
        pet0_.id as id1_4_0_,
        pet0_.birthDate as birthDat2_4_0_,
        pet0_.customer_id as customer6_4_0_,
        pet0_.name as name3_4_0_,
        pet0_.notes as notes4_4_0_,
        pet0_.type as type5_4_0_ 
    from
        Pet pet0_ 
    where
        pet0_.id=?
Hibernate: 
    insert 
    into
        Pet
        (birthDate, customer_id, name, notes, type) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    select
        schedule0_.id as id1_5_0_,
        schedule0_.date as date2_5_0_ 
    from
        Schedule schedule0_ 
    where
        schedule0_.id=?
Hibernate: 
    insert 
    into
        Schedule
        (date) 
    values
        (?)
Hibernate: 
    select
        schedule0_.id as id1_5_,
        schedule0_.date as date2_5_ 
    from
        Schedule schedule0_
2021-02-22 10:06:48.691  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@3e356ed6, testMethod = testSchedulePetsForServiceWithEmployee@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]
</output>
        </test>
        <test duration="20" locationUrl="java:test://com.udacity.jdnd.course3.critter.CritterFunctionalTest/testFindPetsByOwner" name="testFindPetsByOwner()" metainfo="" status="passed">
            <output type="stdout">2021-02-22 10:06:48.695  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@2c4eda3a, testMethod = testFindPetsByOwner@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1a1f22f2]; rollback [true]
Hibernate: 
    select
        customer0_.id as id1_0_0_,
        customer0_.name as name2_0_0_,
        customer0_.notes as notes3_0_0_,
        customer0_.phoneNumber as phoneNum4_0_0_ 
    from
        Customer customer0_ 
    where
        customer0_.id=?
Hibernate: 
    insert 
    into
        Customer
        (name, notes, phoneNumber) 
    values
        (?, ?, ?)
Hibernate: 
    select
        pet0_.id as id1_4_0_,
        pet0_.birthDate as birthDat2_4_0_,
        pet0_.customer_id as customer6_4_0_,
        pet0_.name as name3_4_0_,
        pet0_.notes as notes4_4_0_,
        pet0_.type as type5_4_0_ 
    from
        Pet pet0_ 
    where
        pet0_.id=?
Hibernate: 
    insert 
    into
        Pet
        (birthDate, customer_id, name, notes, type) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    select
        pet0_.id as id1_4_0_,
        pet0_.birthDate as birthDat2_4_0_,
        pet0_.customer_id as customer6_4_0_,
        pet0_.name as name3_4_0_,
        pet0_.notes as notes4_4_0_,
        pet0_.type as type5_4_0_ 
    from
        Pet pet0_ 
    where
        pet0_.id=?
Hibernate: 
    insert 
    into
        Pet
        (birthDate, customer_id, name, notes, type) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    select
        pet0_.id as id1_4_,
        pet0_.birthDate as birthDat2_4_,
        pet0_.customer_id as customer6_4_,
        pet0_.name as name3_4_,
        pet0_.notes as notes4_4_,
        pet0_.type as type5_4_ 
    from
        Pet pet0_ 
    where
        pet0_.customer_id=?
2021-02-22 10:06:48.712  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@2c4eda3a, testMethod = testFindPetsByOwner@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]
</output>
        </test>
        <test duration="11" locationUrl="java:test://com.udacity.jdnd.course3.critter.CritterFunctionalTest/testCreateEmployee" name="testCreateEmployee()" metainfo="" status="passed">
            <output type="stdout">2021-02-22 10:06:48.717  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@4a84beb7, testMethod = testCreateEmployee@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1a1f22f2]; rollback [true]
Hibernate: 
    select
        employee0_.id as id1_1_0_,
        employee0_.name as name2_1_0_ 
    from
        Employee employee0_ 
    where
        employee0_.id=?
Hibernate: 
    insert 
    into
        Employee
        (name) 
    values
        (?)
2021-02-22 10:06:48.725  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@4a84beb7, testMethod = testCreateEmployee@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]
</output>
        </test>
        <test duration="11" locationUrl="java:test://com.udacity.jdnd.course3.critter.CritterFunctionalTest/testChangeEmployeeAvailability" name="testChangeEmployeeAvailability()" metainfo="" status="passed">
            <output type="stdout">2021-02-22 10:06:48.728  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@5578ed7e, testMethod = testChangeEmployeeAvailability@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1a1f22f2]; rollback [true]
Hibernate: 
    select
        employee0_.id as id1_1_0_,
        employee0_.name as name2_1_0_ 
    from
        Employee employee0_ 
    where
        employee0_.id=?
Hibernate: 
    insert 
    into
        Employee
        (name) 
    values
        (?)
2021-02-22 10:06:48.736  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@5578ed7e, testMethod = testChangeEmployeeAvailability@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]
</output>
        </test>
        <test duration="86" locationUrl="java:test://com.udacity.jdnd.course3.critter.CritterFunctionalTest/testFindScheduleByEntities" name="testFindScheduleByEntities()" metainfo="" status="passed">
            <output type="stdout">2021-02-22 10:06:48.740  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@11f752d1, testMethod = testFindScheduleByEntities@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1a1f22f2]; rollback [true]
Hibernate: 
    select
        employee0_.id as id1_1_0_,
        employee0_.name as name2_1_0_ 
    from
        Employee employee0_ 
    where
        employee0_.id=?
Hibernate: 
    insert 
    into
        Employee
        (name) 
    values
        (?)
Hibernate: 
    select
        customer0_.id as id1_0_0_,
        customer0_.name as name2_0_0_,
        customer0_.notes as notes3_0_0_,
        customer0_.phoneNumber as phoneNum4_0_0_ 
    from
        Customer customer0_ 
    where
        customer0_.id=?
Hibernate: 
    insert 
    into
        Customer
        (name, notes, phoneNumber) 
    values
        (?, ?, ?)
Hibernate: 
    select
        pet0_.id as id1_4_0_,
        pet0_.birthDate as birthDat2_4_0_,
        pet0_.customer_id as customer6_4_0_,
        pet0_.name as name3_4_0_,
        pet0_.notes as notes4_4_0_,
        pet0_.type as type5_4_0_ 
    from
        Pet pet0_ 
    where
        pet0_.id=?
Hibernate: 
    insert 
    into
        Pet
        (birthDate, customer_id, name, notes, type) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    select
        pet0_.id as id1_4_0_,
        pet0_.birthDate as birthDat2_4_0_,
        pet0_.customer_id as customer6_4_0_,
        pet0_.name as name3_4_0_,
        pet0_.notes as notes4_4_0_,
        pet0_.type as type5_4_0_ 
    from
        Pet pet0_ 
    where
        pet0_.id=?
Hibernate: 
    insert 
    into
        Pet
        (birthDate, customer_id, name, notes, type) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    select
        schedule0_.id as id1_5_0_,
        schedule0_.date as date2_5_0_ 
    from
        Schedule schedule0_ 
    where
        schedule0_.id=?
Hibernate: 
    insert 
    into
        Schedule
        (date) 
    values
        (?)
Hibernate: 
    select
        employee0_.id as id1_1_0_,
        employee0_.name as name2_1_0_ 
    from
        Employee employee0_ 
    where
        employee0_.id=?
Hibernate: 
    insert 
    into
        Employee
        (name) 
    values
        (?)
Hibernate: 
    select
        employee0_.id as id1_1_0_,
        employee0_.name as name2_1_0_ 
    from
        Employee employee0_ 
    where
        employee0_.id=?
Hibernate: 
    insert 
    into
        Employee
        (name) 
    values
        (?)
Hibernate: 
    select
        employee0_.id as id1_1_0_,
        employee0_.name as name2_1_0_ 
    from
        Employee employee0_ 
    where
        employee0_.id=?
Hibernate: 
    insert 
    into
        Employee
        (name) 
    values
        (?)
Hibernate: 
    select
        customer0_.id as id1_0_0_,
        customer0_.name as name2_0_0_,
        customer0_.notes as notes3_0_0_,
        customer0_.phoneNumber as phoneNum4_0_0_ 
    from
        Customer customer0_ 
    where
        customer0_.id=?
Hibernate: 
    insert 
    into
        Customer
        (name, notes, phoneNumber) 
    values
        (?, ?, ?)
Hibernate: 
    select
        pet0_.id as id1_4_0_,
        pet0_.birthDate as birthDat2_4_0_,
        pet0_.customer_id as customer6_4_0_,
        pet0_.name as name3_4_0_,
        pet0_.notes as notes4_4_0_,
        pet0_.type as type5_4_0_ 
    from
        Pet pet0_ 
    where
        pet0_.id=?
Hibernate: 
    insert 
    into
        Pet
        (birthDate, customer_id, name, notes, type) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    select
        schedule0_.id as id1_5_0_,
        schedule0_.date as date2_5_0_ 
    from
        Schedule schedule0_ 
    where
        schedule0_.id=?
Hibernate: 
    insert 
    into
        Schedule
        (date) 
    values
        (?)
Hibernate: 
    select
        schedule0_.id as id1_5_0_,
        schedule0_.date as date2_5_0_ 
    from
        Schedule schedule0_ 
    where
        schedule0_.id=?
Hibernate: 
    insert 
    into
        Schedule
        (date) 
    values
        (?)
Hibernate: 
    insert 
    into
        Employee_daysAvailable
        (Employee_id, daysAvailable) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_skills
        (Employee_id, skills) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_skills
        (Employee_id, skills) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Schedule_activities
        (Schedule_id, activities) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Schedule_activities
        (Schedule_id, activities) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Schedule_Employee
        (Schedule_id, employees_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Schedule_Pet
        (Schedule_id, pets_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Schedule_Pet
        (Schedule_id, pets_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_daysAvailable
        (Employee_id, daysAvailable) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_skills
        (Employee_id, skills) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_daysAvailable
        (Employee_id, daysAvailable) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_skills
        (Employee_id, skills) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_daysAvailable
        (Employee_id, daysAvailable) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Employee_skills
        (Employee_id, skills) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Schedule_activities
        (Schedule_id, activities) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Schedule_Employee
        (Schedule_id, employees_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Schedule_Employee
        (Schedule_id, employees_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Schedule_Employee
        (Schedule_id, employees_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Schedule_Pet
        (Schedule_id, pets_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Schedule_activities
        (Schedule_id, activities) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Schedule_activities
        (Schedule_id, activities) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Schedule_Employee
        (Schedule_id, employees_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        Schedule_Pet
        (Schedule_id, pets_id) 
    values
        (?, ?)
Hibernate: 
    select
        schedule0_.id as id1_5_,
        schedule0_.date as date2_5_ 
    from
        Schedule schedule0_ 
    left outer join
        Schedule_Employee employees1_ 
            on schedule0_.id=employees1_.Schedule_id 
    left outer join
        Employee employee2_ 
            on employees1_.employees_id=employee2_.id 
    where
        employee2_.id=?
Hibernate: 
    select
        schedule0_.id as id1_5_,
        schedule0_.date as date2_5_ 
    from
        Schedule schedule0_ 
    left outer join
        Schedule_Employee employees1_ 
            on schedule0_.id=employees1_.Schedule_id 
    left outer join
        Employee employee2_ 
            on employees1_.employees_id=employee2_.id 
    where
        employee2_.id=?
Hibernate: 
    select
        schedule0_.id as id1_5_,
        schedule0_.date as date2_5_ 
    from
        Schedule schedule0_ 
    left outer join
        Schedule_Pet pets1_ 
            on schedule0_.id=pets1_.Schedule_id 
    left outer join
        Pet pet2_ 
            on pets1_.pets_id=pet2_.id 
    where
        pet2_.id=?
Hibernate: 
    select
        schedule0_.id as id1_5_,
        schedule0_.date as date2_5_ 
    from
        Schedule schedule0_ 
    left outer join
        Schedule_Pet pets1_ 
            on schedule0_.id=pets1_.Schedule_id 
    left outer join
        Pet pet2_ 
            on pets1_.pets_id=pet2_.id 
    where
        pet2_.id=?
Hibernate: 
    select
        schedule0_.id as id1_5_,
        schedule0_.date as date2_5_ 
    from
        Schedule schedule0_ 
    left outer join
        Schedule_Pet pets1_ 
            on schedule0_.id=pets1_.Schedule_id 
    left outer join
        Pet pet2_ 
            on pets1_.pets_id=pet2_.id 
    where
        pet2_.id=?
Hibernate: 
    select
        schedule0_.id as id1_5_,
        schedule0_.date as date2_5_ 
    from
        Schedule schedule0_ 
    left outer join
        Schedule_Pet pets1_ 
            on schedule0_.id=pets1_.Schedule_id 
    left outer join
        Pet pet2_ 
            on pets1_.pets_id=pet2_.id 
    where
        pet2_.id=?
Hibernate: 
    select
        schedule0_.id as id1_5_,
        schedule0_.date as date2_5_ 
    from
        Schedule schedule0_ 
    left outer join
        Schedule_Pet pets1_ 
            on schedule0_.id=pets1_.Schedule_id 
    left outer join
        Pet pet2_ 
            on pets1_.pets_id=pet2_.id 
    where
        pet2_.id=?
2021-02-22 10:06:48.823  INFO 78789 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@62727399 testClass = CritterFunctionalTest, testInstance = com.udacity.jdnd.course3.critter.CritterFunctionalTest@11f752d1, testMethod = testFindScheduleByEntities@CritterFunctionalTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d9ac0b4 testClass = CritterFunctionalTest, locations = &amp;#39;{}&amp;#39;, classes = &amp;#39;{class com.udacity.jdnd.course3.critter.CritterApplication, class com.udacity.jdnd.course3.critter.CritterApplication}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}&amp;#39;, contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@461ad730, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21d03963], resourceBasePath = &amp;#39;src/main/webapp&amp;#39;, contextLoader = &amp;#39;org.springframework.boot.test.context.SpringBootContextLoader&amp;#39;, parent = [null]], attributes = map[&amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.activateListener&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder&amp;#39; -&amp;gt; true, &amp;#39;org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder&amp;#39; -&amp;gt; true]]
</output>
        </test>
    </suite>
</testrun>
